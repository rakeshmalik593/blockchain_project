(()=>{$(document).ready((function(){t()}));const t=async()=>{const t=document.getElementById("metbtn");if(window.ethereum){const n=await ethereum.request({method:"eth_requestAccounts"});console.log(n),account=n[0],localStorage.setItem("account_address",account),accountArea=document.getElementById("accountArea"),t.style.visibility="hidden",accountArea.innerHTML=`Logged in with Account: ${localStorage.getItem("account_address")}`,localStorage.setItem("loggedAccount",account),e()}else console.log("install metamask"),t.textContent="You need to install Metamask first"},e=async()=>{window.web3=await new Web3(window.ethereum),window.contract=await new window.web3.eth.Contract([{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"userAccount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"userExists",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[],name:"createAcc",outputs:[{internalType:"string",name:"",type:"string"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[],name:"deposit",outputs:[{internalType:"string",name:"",type:"string"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"withdraw",outputs:[{internalType:"string",name:"",type:"string"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{internalType:"address payable",name:"userAddress",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"TransferAmount",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{internalType:"address payable",name:"toAddress",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"sendAmount",outputs:[{internalType:"string",name:"",type:"string"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!0,inputs:[],name:"userAccountBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"accountExist",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"}],"a0097Af1eD7D788dCd688Ccb14741ddEf7BF9839"),a(),n()},n=async()=>{const t=await window.contract.methods.createAcc().call();console.log(t)},a=async()=>{var t;await window.web3.eth.getBalance(localStorage.getItem("loggedAccount")).then((function(e){console.log(e),t=e})),console.log(t);const e=window.web3.utils.fromWei(String(t),"ether");localStorage.setItem("ethereumBalance",parseFloat(e).toFixed(4)),document.getElementById("balanceArea").innerHTML=`Current Balance: ${parseFloat(e).toFixed(4)} Ethereum`,console.log(parseFloat(e).toFixed(4))}})();